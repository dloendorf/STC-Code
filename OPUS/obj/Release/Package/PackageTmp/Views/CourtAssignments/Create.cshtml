@model OPUS.Models.CourtAssignment

@{
    ViewBag.Title = "Assign Players To Court";
    TempData["Return"] = "Create";
}

@*<h2>Assign Players To Court</h2>*@


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <link href="@Url.Content("~/Content/Site.css")" rel="stylesheet" type="text/css" />
    <script src="../../Scripts/jquery-2.1.4.js" type="text/javascript"></script>

    <div class="container-fluid">
        <div class="row">
            <div class="col-md-4" style="float:left">
                <div class="form-horizontal">
                    <h4>Assign Players To Court</h4>
                    @if (Request.IsAuthenticated && (User.IsInRole("Ladies Monitor") || User.IsInRole("Mens Monitor") || User.IsInRole("Admin")))
                    {
                        <a class="btn2 btn2-success" href="/Home/CourtAssignmentSheet">Blank Court Form</a>
                    }
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Court, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.Court, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Court, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Player1, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @*@Html.DropDownListFor(model => model.Player1, new SelectList(((List<OPUS.Models.PlayerList>)ViewBag.Players).Select(d => new SelectListItem { Text = d.Name, Value = d.ID.ToString() }), "Value", "Text"), "Select Name")*@ 
                            @Html.DropDownListFor(model => model.Player1ID, (SelectList)ViewBag.Players, "Select Name")
                            @Html.ValidationMessageFor(model => model.Player1, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Player2, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @*@Html.DropDownListFor(model => model.Player2, new SelectList(((List<OPUS.Models.PlayerList>)ViewBag.Players).Select(d => new SelectListItem { Text = d.Name, Value = d.ID.ToString() }), "Value", "Text"), "Select Name")*@
                            @Html.DropDownListFor(model => model.Player2ID, (SelectList)ViewBag.Players, "Select Name")
                            @Html.ValidationMessageFor(model => model.Player2, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Player3, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @*@Html.DropDownListFor(model => model.Player3, new SelectList(((List<OPUS.Models.PlayerList>)ViewBag.Players).Select(d => new SelectListItem { Text = d.Name, Value = d.ID.ToString() }), "Value", "Text"), "Select Name")*@
                            @Html.DropDownListFor(model => model.Player3ID, (SelectList)ViewBag.Players, "Select Name")
                            @Html.ValidationMessageFor(model => model.Player3, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Player4, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @*@Html.DropDownListFor(model => model.Player4, new SelectList(((List<OPUS.Models.PlayerList>)ViewBag.Players).Select(d => new SelectListItem { Text = d.Name, Value = d.ID.ToString() }), "Value", "Text"), "Select Name")*@
                            @Html.DropDownListFor(model => model.Player4ID, (SelectList)ViewBag.Players, "Select Name")
                            @Html.ValidationMessageFor(model => model.Player4, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Add Court" class="btn btn-primary" />
                            <a class="btn btn-primary" href="/CourtAssignments/Index">Cancel</a>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-8">
                <div class="container-fluid">
                    <div class="row">
                        <div class="col-md-12">
                            <h4>Previous Week Court Assignments (@Session["previousCourtDate"])</h4>
                            @{
                                var grid = new WebGrid(source: ViewBag.PreviousAssign);
                                @grid.GetHtml(htmlAttributes: new { id = "CourtAssignment" }, columns: grid.Columns(
                                grid.Column("Court"),
                                grid.Column("Player1", header: "Player 1"),
                                grid.Column("Player2", header: "Player 2"),
                                grid.Column("Player3", header: "Player 3"),
                                grid.Column("Player4", header: "Player 4")), tableStyle: "PGrid", headerStyle: "Header");
                            }
                        </div>
                        <div id ="opusPlayers" class="col-md-12">
                            <h4>OPUS Players</h4>
                            @{
                                var grid1 = new WebGrid(source: ViewBag.PlayerWebGridInfo, canPage: false, defaultSort:"Rank");
                                @grid1.GetHtml(htmlAttributes: new { id = "OPUSPlayers" }, columns: grid1.Columns(
                                grid1.Column("Name"),
                                grid1.Column("OverallPercentWon", header: "% Won Overall"),
                                grid1.Column("Rank", header: "Weekly OPUS Rank")), tableStyle: "PGrid", headerStyle: "Header");
                            }
                        </div>
                    </div>
                 </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
